hist(log(wts))
output_mala_d5 <- dimen_func(d = 5, lambda = 1e-4, iter,
0.3, 0.3)
wts <- exp(output_mala_d5[[1]][[2]])
hist(log(wts))
mean(wts)^2/mean(wts^2)
output_mala_d5 <- dimen_func(d = 5, lambda = 1e-8, iter,
0.3, 0.3)
wts <- exp(output_mala_d5[[1]][[2]])
hist(log(wts))
mean(wts)^2/mean(wts^2)
hist(wts)
mean(wts)^2
mean(wts^2)
mean(wts)
output_mala_d5 <- dimen_func(d = 5, lambda = 1e-2, iter,
0.3, 0.3)
wts <- exp(output_mala_d5[[1]][[2]])
hist(wts)
mean(wts)^2/mean(wts^2)
output_mala_d5 <- dimen_func(d = 5, lambda = 1, iter,
0.3, 0.3)
output_mala_d5 <- dimen_func(d = 5, lambda = 1, iter,
0.8, 0.1)
output_mala_d5 <- dimen_func(d = 5, lambda = 1, iter,
1.5, 0.2)
output_mala_d5 <- dimen_func(d = 5, lambda = 1, iter,
2, 0.15)
output_mala_d5 <- dimen_func(d = 5, lambda = 1, iter,
3, 0.15)
output_mala_d5 <- dimen_func(d = 5, lambda = 1, iter,
2.7, 0.15)
mean(wts)^2/mean(wts^2)
wts <- exp(output_mala_d5[[1]][[2]])
mean(wts)^2/mean(wts^2)
output_mala_d5 <- dimen_func(d = 5, lambda = 1e-2, iter,
0.3, 0.3)
output_mala_d5 <- dimen_func(d = 5, lambda = 1e-2, iter,
0.35, 0.35)
wts <- exp(output_mala_d5[[1]][[2]])
mean(wts)^2/mean(wts^2)
output_mala_d5 <- dimen_func(d = 5, lambda = 1e-3, iter,
0.35, 0.35)
wts <- exp(output_mala_d5[[1]][[2]])
mean(wts)^2/mean(wts^2)
output_mala_d5 <- dimen_func(d = 10, lambda = 1e-3, iter,
0.35, 0.35)
output_mala_d5 <- dimen_func(d = 5, lambda = 1e-2, iter,
0.35, 0.35)
output_mala_d5 <- dimen_func(d = 5, lambda = 1, iter,
0.35, 0.35)
output_mala_d5 <- dimen_func(d = 5, lambda = 1, iter,
2.7, 0.25)
output_mala_d5 <- dimen_func(d = 5, lambda = 1, iter,
2.6, 0.15)
output_mala_d5 <- dimen_func(d = 5, lambda = 1, iter,
2.6, 0.15)
output_mala_d5 <- dimen_func(d = 5, lambda = 1, iter,
2.6, 0.12)
output_mala_d5 <- dimen_func(d = 5, lambda = 1, iter,
2.6, 0.13)
output_mala_d5 <- dimen_func(d = 10, lambda = 1e-3, iter,
0.35, 0.35)
output_mala_d5 <- dimen_func(d = 10, lambda = 1e-3, iter,
0.15, 0.15)
output_mala_d5 <- dimen_func(d = 10, lambda = 1e-3, iter,
0.2, 0.2)
output_mala_d5 <- dimen_func(d = 10, lambda = 1e-3, iter,
0.2, 0.2)
wts <- exp(output_mala_d5[[1]][[2]])
mean(wts)^2/mean(wts^2)
output_mala_d5 <- dimen_func(d = 10, lambda = 1e-1, iter,
0.2, 0.2)
wts <- exp(output_mala_d5[[1]][[2]])
mean(wts)^2/mean(wts^2)
output_mala_d5 <- dimen_func(d = 10, lambda = 0.5, iter,
0.2, 0.2)
output_mala_d5 <- dimen_func(d = 10, lambda = 0.5, iter,
0.8, 0.1)
output_mala_d5 <- dimen_func(d = 10, lambda = 0.5, iter,
1, 0.07)
wts <- exp(output_mala_d5[[1]][[2]])
mean(wts)^2/mean(wts^2)
output_mala_d5 <- dimen_func(d = 20, lambda = 1e-4, iter,
1, 0.07)
output_mala_d5 <- dimen_func(d = 20, lambda = 1e-4, iter,
0.1, 0.01)
output_mala_d5 <- dimen_func(d = 20, lambda = 1e-4, iter,
0.1, 0.03)
output_mala_d5 <- dimen_func(d = 20, lambda = 1e-4, iter,
0.4, 0.08)
output_mala_d5 <- dimen_func(d = 20, lambda = 1e-4, iter,
0.25, 0.08)
output_mala_d5 <- dimen_func(d = 20, lambda = 1e-4, iter,
0.1, 0.08)
output_mala_d5 <- dimen_func(d = 20, lambda = 1e-4, iter,
0.15, 0.08)
output_mala_d5 <- dimen_func(d = 20, lambda = 1e-4, iter,
0.14, 0.08)
output_mala_d5 <- dimen_func(d = 20, lambda = 1e-4, iter,
0.14, 0.1)
output_mala_d5 <- dimen_func(d = 20, lambda = 1e-4, iter,
0.14, 0.2)
output_mala_d5 <- dimen_func(d = 20, lambda = 1e-4, iter,
0.14, 0.15)
output_mala_d5 <- dimen_func(d = 20, lambda = 1e-4, iter,
0.14, 0.14)
output_mala_d5 <- dimen_func(d = 20, lambda = 1e-4, iter,
0.14, 0.14)
wts <- exp(output_mala_d5[[1]][[2]])
mean(wts)^2/mean(wts^2)
output_mala_d5 <- dimen_func(d = 20, lambda = 0.1, iter,
0.14, 0.14)
output_mala_d5 <- dimen_func(d = 20, lambda = 0.1, iter,
0.07, 0.4)
output_mala_d5 <- dimen_func(d = 20, lambda = 0.1, iter,
0.1, 0.1)
output_mala_d5 <- dimen_func(d = 20, lambda = 0.1, iter,
0.5, 0.07)
output_mala_d5 <- dimen_func(d = 20, lambda = 0.1, iter,
0.7, 0.07)
output_mala_d5 <- dimen_func(d = 20, lambda = 0.1, iter,
0.2, 0.07)
output_mala_d5 <- dimen_func(d = 20, lambda = 0.1, iter,
0.3, 0.07)
output_mala_d5 <- dimen_func(d = 20, lambda = 0.1, iter,
0.3, 0.07)
wts <- exp(output_mala_d5[[1]][[2]])
mean(wts)^2/mean(wts^2)
output_mala_d5 <- dimen_func(d = 20, lambda = 0.2, iter,
0.3, 0.07)
wts <- exp(output_mala_d5[[1]][[2]])
mean(wts)^2/mean(wts^2)
output_mala_d5 <- dimen_func(d = 20, lambda = 0.2, iter,
0.5, 0.04)
output_mala_d5 <- dimen_func(d = 20, lambda = 0.2, iter,
0.4, 0.04)
output_mala_d5 <- dimen_func(d = 20, lambda = 0.2, iter,
0.45, 0.04)
output_mala_d5 <- dimen_func(d = 20, lambda = 0.2, iter,
0.45, 0.04)
output_mala_d5 <- dimen_func(d = 1, lambda = 1, iter,
0.4, 0.04)
wts <- exp(output_mala_d5[[1]][[2]])
mean(wts)^2/mean(wts^2)
output_mala_d5 <- dimen_func(d = 1, lambda = 1e-1, iter,
0.4, 0.04)
output_mala_d5 <- dimen_func(d = 1, lambda = 1e-1, iter,
1, 1)
output_mala_d5 <- dimen_func(d = 1, lambda = 1e-1, iter,
0.6, 1.2)
output_mala_d5 <- dimen_func(d = 1, lambda = 1e-1, iter,
0.75, 1.5)
output_mala_d5 <- dimen_func(d = 1, lambda = 1e-1, iter,
1, 1.5)
output_mala_d5 <- dimen_func(d = 1, lambda = 1e-1, iter,
1.5, 1.5)
output_mala_d5 <- dimen_func(d = 1, lambda = 1e-1, iter,
1.6, 1.5)
output_mala_d5 <- dimen_func(d = 1, lambda = 1e-1, iter,
1.65, 1.5)
output_mala_d5 <- dimen_func(d = 1, lambda = 1e-1, iter,
1.65, 1.5)
output_mala_d5 <- dimen_func(d = 1, lambda = 1e-1, iter,
1.7, 1.5)
output_mala_d5 <- dimen_func(d = 1, lambda = 1e-1, iter,
1.7, 1.5)
output_mala_d5 <- dimen_func(d = 1, lambda = 1e-1, iter,
1.7, 1.5)
output_mala_d5 <- dimen_func(d = 1, lambda = 10, iter,
1.7, 1.5)
output_mala_d5 <- dimen_func(d = 1, lambda = 10, iter,
4, 1.5)
output_mala_d5 <- dimen_func(d = 1, lambda = 10, iter,
10, 1.5)
output_mala_d5 <- dimen_func(d = 1, lambda = 10, iter,
20, 1.5)
output_mala_d5 <- dimen_func(d = 1, lambda = 10, iter,
50, 1.5)
wts <- exp(output_mala_d5[[1]][[2]])
mean(wts)^2/mean(wts^2)
output_mala_d5 <- dimen_func(d = 1, lambda = 90, iter,
50, 1.5)
output_mala_d5 <- dimen_func(d = 1, lambda = 90, iter,
100, 1.5)
output_mala_d5 <- dimen_func(d = 1, lambda = 90, iter,
150, 1.5)
output_mala_d5 <- dimen_func(d = 1, lambda = 90, iter,
2000, 1.5)
output_mala_d5 <- dimen_func(d = 1, lambda = 90, iter,
200, 1.5)
output_mala_d5 <- dimen_func(d = 1, lambda = 90, iter,
250, 1.5)
output_mala_d5 <- dimen_func(d = 1, lambda = 90, iter,
280, 1.5)
output_mala_d5 <- dimen_func(d = 1, lambda = 90, iter,
300, 1.5)
output_mala_d5 <- dimen_func(d = 1, lambda = 90, iter,
310, 1.5)
output_mala_d5 <- dimen_func(d = 1, lambda = 90, iter,
310, 1)
output_mala_d5 <- dimen_func(d = 1, lambda = 90, iter,
310, 1)
output_mala_d5 <- dimen_func(d = 1, lambda = 90, iter,
310, 1)
output_mala_d5 <- dimen_func(d = 1, lambda = 90, iter,
310, 1.1)
output_mala_d5 <- dimen_func(d = 1, lambda = 90, iter,
310, 1.1)
output_mala_d5 <- dimen_func(d = 1, lambda = 25, iter,
92, 1.1)
wts <- exp(output_mala_d5[[1]][[2]])
mean(wts)^2/mean(wts^2)
getwd()
#####################################################################
################# Exponential output visualisation ##################
#####################################################################
set.seed(100)
source("exp_d4_functions.R")
library(mcmcse)
library(foreach)
library(doParallel)
num_cores <- 4
doParallel::registerDoParallel(cores = num_cores)
iter <- 1e4
reps <- 50
lamb_d1 <- seq(1e-4, 25, length = reps)
lamb_d5 <- seq(1e-2, 1, length = reps)
lamb_d10 <- seq(1e-3, 0.5, length = reps)
lamb_d20 <- seq(1e-4, 0.2, length = reps)
# lamb_d50 <- seq(1e-2, 1.2, length = reps)
delta_is_d1 <- seq(1.7, 92, length = length(lamb_d4))
#####################################################################
################# Exponential output visualisation ##################
#####################################################################
set.seed(100)
source("exp_d4_functions.R")
library(mcmcse)
library(foreach)
library(doParallel)
num_cores <- 4
doParallel::registerDoParallel(cores = num_cores)
iter <- 1e4
reps <- 50
lamb_d1 <- seq(1e-4, 25, length = reps)
lamb_d5 <- seq(1e-2, 1, length = reps)
lamb_d10 <- seq(1e-3, 0.5, length = reps)
lamb_d20 <- seq(1e-4, 0.2, length = reps)
# lamb_d50 <- seq(1e-2, 1.2, length = reps)
delta_is_d1 <- seq(1.7, 92, length = length(lamb_d1))
delta_px_d1 <- seq(1.5, 1.1, length = length(lamb_d1))
delta_is_d5 <- seq(0.35, 2.6, length = length(lamb_d5))
delta_px_d5 <- seq(0.35, 0.13, length = length(lamb_d5))
delta_is_d10 <- seq(0.2, 1, length = length(lamb_d10))
delta_px_d10 <- seq(0.2, 0.07, length = length(lamb_d10))
delta_is_d20 <- seq(0.14, 0.45, length = length(lamb_d20))
delta_px_d20 <- seq(0.14, 0.04, length = length(lamb_d20))
# delta_is_d50 <- seq(0.23, 1, length = length(lamb_d50))
# delta_px_d50 <- seq(0.23, 0.16, length = length(lamb_d50))
output_exp_d1 <- list()
output_exp_d5 <- list()
output_exp_d10 <- list()
output_exp_d20 <- list()
# output_exp_d50 <- list()
######################  dimension = 1  ################################
output_exp_d1 <- foreach(lam_ani = 1:length(lamb_d1)) %dopar%{
output_mala_d1 <- dimen_func(d = 1, lambda = lamb_d1[lam_ani], iter = iter,
delta_is_d1[lam_ani], delta_px_d1[lam_ani])
asymp_cov_ism_d1 <- asymp_covmat_fn(output_mala_d1[[1]][[1]], exp(output_mala_d1[[1]][[2]]))
asymp_ess_pilam_d1 <- ess(output_mala_d1[[1]][[1]], r = 1)
asymp_cov_pxm_d1 <- mcse.multi(output_mala_d1[[2]], r = 1)$cov
asymp_margvar_is1 <- diag(asymp_cov_ism_d1)   ### marginal variance ismala
# asymp_margvar_pilam1 <- diag(asymp_cov_pilam_d1)   ### marginal variance of is for pilambda
rel_eff_1 <- diag(asymp_cov_pxm_d1)/ asymp_margvar_is1  ### relative efficiency wrt pi
wts <- exp(output_mala_d1[[1]][[2]])
ess_ism_d1 <- (mean(wts)^2)/mean(wts^2)
list(asymp_margvar_is1, asymp_ess_pilam_d1/iter, rel_eff_1, ess_ism_d1)
}
save(output_exp_d1, file = "output_d1.Rdata")
######################  dimension = 5  ################################
output_exp_d5 <- foreach(lam_ani = 1:length(lamb_d5)) %dopar%{
output_mala_d5 <- dimen_func(d = 5, lambda = lamb_d5[lam_ani], iter = iter,
delta_is_d5[lam_ani], delta_px_d5[lam_ani])
asymp_cov_ism_d5 <- asymp_covmat_fn(output_mala_d5[[1]][[1]], exp(output_mala_d5[[1]][[2]]))
asymp_ess_pilam_d5 <- ess(output_mala_d5[[1]][[1]], r = 1)
asymp_cov_pxm_d5 <- mcse.multi(output_mala_d5[[2]], r = 1)$cov
asymp_margvar_is5 <- diag(asymp_cov_ism_d5)   ### marginal variance ismala
# asymp_margvar_pilam5 <- diag(asymp_cov_pilam_d5)   ### marginal variance of is for pilambda
rel_eff_5 <- diag(asymp_cov_pxm_d5)/ asymp_margvar_is5  ### relative efficiency wrt pi
wts <- exp(output_mala_d5[[1]][[2]])
ess_ism_d5 <- (mean(wts)^2)/mean(wts^2)
list(asymp_margvar_is5, asymp_ess_pilam_d5/iter , rel_eff_5, ess_ism_d5)
}
save(output_exp_d5, file = "output_d5.Rdata")
######################  dimension = 10  ################################
output_exp_d10 <- foreach(lam_ani = 1:length(lamb_d10)) %dopar% {
output_mala_d10 <- dimen_func(d = 10, lambda = lamb_d10[lam_ani], iter = iter,
delta_is_d10[lam_ani], delta_px_d10[lam_ani])
asymp_cov_ism_d10 <- asymp_covmat_fn(output_mala_d10[[1]][[1]], exp(output_mala_d10[[1]][[2]]))
asymp_ess_pilam_d10 <- ess(output_mala_d10[[1]][[1]], r = 1)
asymp_cov_pxm_d10 <- mcse.multi(output_mala_d10[[2]], r = 1)$cov
asymp_margvar_is10 <- diag(asymp_cov_ism_d10)   ### marginal variance ismala
#asymp_margvar_pilam10 <- diag(asymp_cov_pilam_d10)   ### marginal variance of is for pilambda
rel_eff_10 <- diag(asymp_cov_pxm_d10)/ asymp_margvar_is10  ### relative efficiency wrt pi
wts <- exp(output_mala_d10[[1]][[2]])
ess_ism_d10 <- (mean(wts)^2)/mean(wts^2)
list(asymp_margvar_is10, asymp_ess_pilam_d10/iter , rel_eff_10, ess_ism_d10)
}
save(output_exp_d10, file = "output_d10.Rdata")
######################  dimension = 20  ################################
output_exp_d20 <- foreach(lam_ani = 1:length(lamb_d20)) %dopar% {
output_mala_d20 <- dimen_func(d = 20, lambda = lamb_d20[lam_ani], iter = iter,
delta_is_d20[lam_ani], delta_px_d20[lam_ani])
asymp_cov_ism_d20 <- asymp_covmat_fn(output_mala_d20[[1]][[1]], exp(output_mala_d20[[1]][[2]]))
asymp_ess_pilam_d20 <- ess(output_mala_d20[[1]][[1]], r = 1)
asymp_cov_pxm_d20 <- mcse.multi(output_mala_d20[[2]], r = 1)$cov
asymp_margvar_is20 <- diag(asymp_cov_ism_d20)   ### marginal variance ismala
#  asymp_margvar_pilam20 <- diag(asymp_cov_pilam_d20)   ### marginal variance of is for pilambda
rel_eff_20 <- diag(asymp_cov_pxm_d20)/ asymp_margvar_is20  ### relative efficiency wrt pi
wts <- exp(output_mala_d20[[1]][[2]])
ess_ism_d20 <- (mean(wts)^2)/mean(wts^2)
list(asymp_margvar_is20, asymp_ess_pilam_d20/iter, rel_eff_20, ess_ism_d20)
}
save(output_exp_d20, file = "output_d20.Rdata")
######################  dimension = 50  ################################
# output_exp_d50 <- foreach(lam_ani = 1:length(lamb_d50)) %dopar% {
#   output_mala_d50 <- dimen_func(d = 50, lambda = lamb_d50[lam_ani], iter = iter,
#                                 delta_is_d50[lam_ani], delta_px_d50[lam_ani])
#   asymp_cov_ism_d50 <- asymp_covmat_fn(output_mala_d50[[1]][[1]], exp(output_mala_d50[[1]][[2]]))
#   asymp_ess_pilam_d50 <- ess(output_mala_d50[[1]][[1]], r = 1)
#   asymp_cov_pxm_d50 <- mcse.multi(output_mala_d50[[2]], r = 1)$cov
#   asymp_margvar_is50 <- diag(asymp_cov_ism_d50)   ### marginal variance ismala
#  # asymp_margvar_pilam50 <- diag(asymp_cov_pilam_d50)   ### marginal variance of is for pilambda
#   rel_eff_50 <- diag(asymp_cov_pxm_d50)/ asymp_margvar_is50  ### relative efficiency wrt pi
#   wts <- exp(output_mala_d50[[1]][[2]])
#   ess_ism_d50 <- (mean(wts)^2)/mean(wts^2)
#   list(asymp_margvar_is50, asymp_ess_pilam_d50, rel_eff_50, ess_ism_d50)
# }
# save(output_exp_d50, file = "output_d50.Rdata")
getwd()
source("exp_d4_functions.R")
load("output_d1.Rdata")
load("output_d5.Rdata")
load("output_d10.Rdata")
load("output_d20.Rdata")
reps <- 50
cutoff <- c(0.4,0.8)
lamb_d1 <- seq(1e-4, 25, length = reps)
lamb_d5 <- seq(1e-2, 1, length = reps)
lamb_d10 <- seq(1e-3, 0.5, length = reps)
lamb_d20 <- seq(1e-4, 0.2, length = reps)
##########################  For d = 1  ##########################
load("output_d1.Rdata")
ess_d1 <- sapply(output_exp_d1, function(l) l[[4]])
pilam_var_d1 <- colMeans(sapply(output_exp_d1, function(l) l[[2]]))
source("exp_d4_functions.R")
load("output_d1.Rdata")
load("output_d5.Rdata")
load("output_d10.Rdata")
load("output_d20.Rdata")
reps <- 50
cutoff <- c(0.4,0.8)
lamb_d1 <- seq(1e-4, 25, length = reps)
lamb_d5 <- seq(1e-2, 1, length = reps)
lamb_d10 <- seq(1e-3, 0.5, length = reps)
lamb_d20 <- seq(1e-4, 0.2, length = reps)
##########################  For d = 1  ##########################
load("output_d1.Rdata")
ess_d1 <- sapply(output_exp_d1, function(l) l[[4]])
pilam_var_d1 <- sapply(output_exp_d1, function(l) l[[2]])
is_var_d1 <- sapply(output_exp_d1, function(l) l[[1]])
opt_win <- c(max(lamb_d1[which(ess_d1 >= cutoff[1])]), min(lamb_d1[which(ess_d1 <= cutoff[2])]))
pdf(file = "plots/exp_plot_d1.pdf", height = 4, width = 12)
source("exp_d4_functions.R")
load("output_d1.Rdata")
load("output_d5.Rdata")
load("output_d10.Rdata")
load("output_d20.Rdata")
reps <- 50
cutoff <- c(0.4,0.8)
lamb_d1 <- seq(1e-4, 25, length = reps)
lamb_d5 <- seq(1e-2, 1, length = reps)
lamb_d10 <- seq(1e-3, 0.5, length = reps)
lamb_d20 <- seq(1e-4, 0.2, length = reps)
##########################  For d = 1  ##########################
load("output_d1.Rdata")
ess_d1 <- sapply(output_exp_d1, function(l) l[[4]])
pilam_var_d1 <- sapply(output_exp_d1, function(l) l[[2]])
is_var_d1 <- sapply(output_exp_d1, function(l) l[[1]])
opt_win <- c(max(lamb_d1[which(ess_d1 >= cutoff[1])]), min(lamb_d1[which(ess_d1 <= cutoff[2])]))
pdf(file = "plots/exp_plot_d1.pdf", height = 4, width = 12)
par(mfrow = c(1,3))
plot(lamb_d1, ess_d1, type = 'l', xlab = expression(lambda), ylab = expression(n[e]/n))
# lines(abline(h=cutoff, col=c("blue", "blue"), lty=c(2,2), lwd=c(1, 1)))
lines(abline(v=opt_win, col=c("blue", "blue"), lty=c(2,2), lwd=c(1, 1)))
plot(lamb_d1, pilam_var_d1, type = 'l', xlab = "lambda",
ylab = expression(paste("MCMC ESS under ",pi^lambda)))
# lines(abline(v=opt_win, col=c("blue", "blue"), lty=c(2,2), lwd=c(1, 1)))
plot(lamb_d1, is_var_d1, type = 'l', xlab = "lambda",
ylab ="Importance Sampling Asymptotic variance")
lines(abline(v=opt_win, col=c("blue", "blue"), lty=c(2,2), lwd=c(1, 1)))
dev.off()
##########################  For d = 5  ##########################
load("output_d5.Rdata")
ess_d5 <- sapply(output_exp_d5, function(l) l[[4]])
pilam_var_d5 <- colMeans(sapply(output_exp_d5, function(l) l[[2]]))
is_var_d5 <- colMeans(sapply(output_exp_d5, function(l) l[[1]]))
opt_win <- c(max(lamb_d5[which(ess_d5 >= cutoff[1])]), min(lamb_d5[which(ess_d5 <= cutoff[2])]))
pdf(file = "plots/exp_plot_d5.pdf", height = 4, width = 12)
par(mfrow = c(1,3))
plot(lamb_d5, ess_d5, type = 'l', xlab = expression(lambda), ylab = expression(n[e]/n))
# lines(abline(h=cutoff, col=c("blue", "blue"), lty=c(2,2), lwd=c(1, 1)))
lines(abline(v=opt_win, col=c("blue", "blue"), lty=c(2,2), lwd=c(1, 1)))
plot(lamb_d5, pilam_var_d5, type = 'l', xlab = expression(lambda),
ylab = expression(paste("MCMC ESS under ",pi^lambda)))
# lines(abline(v=opt_win, col=c("blue", "blue"), lty=c(2,2), lwd=c(1, 1)))
plot(lamb_d5, is_var_d5, type = 'l', xlab = expression(lambda),
ylab ="Importance Sampling Asymptotic variance")
lines(abline(v=opt_win, col=c("blue", "blue"), lty=c(2,2), lwd=c(1, 1)))
dev.off()
##########################  For d = 10  ##########################
load("output_d10.Rdata")
ess_d10 <- sapply(output_exp_d10, function(l) l[[4]])
pilam_var_d10 <- colMeans(sapply(output_exp_d10, function(l) l[[2]]))
is_var_d10 <- colMeans(sapply(output_exp_d10, function(l) l[[1]]))
opt_win <- c(max(lamb_d10[which(ess_d10 >= cutoff[1])]), min(lamb_d10[which(ess_d10 <= cutoff[2])]))
pdf(file = "plots/exp_plot_d10.pdf", height = 4, width = 12)
par(mfrow = c(1,3))
plot(lamb_d10, ess_d10, type = 'l', xlab = expression(lambda), ylab = expression(n[e]/n))
# lines(abline(h=cutoff, col=c("blue", "blue"), lty=c(2,2), lwd=c(1, 1)))
lines(abline(v=opt_win, col=c("blue", "blue"), lty=c(2,2), lwd=c(1, 1)))
plot(lamb_d10, pilam_var_d10, type = 'l', xlab = expression(lambda),
ylab = expression(paste("MCMC ESS under ",pi^lambda)))
# lines(abline(v=opt_win, col=c("blue", "blue"), lty=c(2,2), lwd=c(1, 1)))
plot(lamb_d10, is_var_d10, type = 'l', xlab = expression(lambda),
ylab ="Importance Sampling Asymptotic variance")
lines(abline(v=opt_win, col=c("blue", "blue"), lty=c(2,2), lwd=c(1, 1)))
dev.off()
##########################  For d = 20  ##########################
load("output_d20.Rdata")
ess_d20 <- sapply(output_exp_d20, function(l) l[[4]])
pilam_var_d20 <- colMeans(sapply(output_exp_d20, function(l) l[[2]]))
is_var_d20 <- colMeans(sapply(output_exp_d20, function(l) l[[1]]))
opt_win <- c(max(lamb_d20[which(ess_d20 >= cutoff[1])]), min(lamb_d20[which(ess_d20 <= cutoff[2])]))
pdf(file = "plots/exp_plot_d20.pdf", height = 4, width = 12)
par(mfrow = c(1,3))
plot(lamb_d20, ess_d20, type = 'l', xlab = expression(lambda), ylab = expression(n[e]/n))
# lines(abline(h=cutoff, col=c("blue", "blue"), lty=c(2,2), lwd=c(1, 1)))
lines(abline(v=opt_win, col=c("blue", "blue"), lty=c(2,2), lwd=c(1, 1)))
plot(lamb_d20, pilam_var_d20, type = 'l', xlab = expression(lambda),
ylab = expression(paste("MCMC ESS under ",pi^lambda)))
# lines(abline(v=opt_win, col=c("blue", "blue"), lty=c(2,2), lwd=c(1, 1)))
plot(lamb_d20, is_var_d20, type = 'l', xlab = expression(lambda),
ylab ="Importance Sampling Asymptotic variance")
lines(abline(v=opt_win, col=c("blue", "blue"), lty=c(2,2), lwd=c(1, 1)))
dev.off()
plot(density(output_exp_d20[[2]][,10]))
plot(density(output_exp_d20[[2]][[,10]]))
plot(density(output_exp_d20[[2]]))
output_exp_d20[[2]]
output_exp_d20[[3]]
output_exp_d20[[35]]
1e-4
1e-3
###############   Function for the MY envelope of Laplace distribution   #############
values <- seq(-3, 3, length = 1e5)
prox_arg <- function(x, y, mu)     # x is the current value
{
z_x <- abs(y) + (x - y)^2 / (2*mu)
return(z_x)
}
prox_func <- function(val, mu)
{
vec <- c(0, val - mu, val + mu)
fun.val <- prox_arg(val, vec, mu)
index <- which.min(fun.val)
prox <- vec[index]
return(prox)
}
approx_dens_func <- function(x, lambda)   ########   from Durmus et al.
{
num <- exp((lambda/2 - abs(x))*as.numeric(I(abs(x) >= lambda)) -
((x^2)/(2*lambda))*as.numeric(I(abs(x) < lambda)))
den <- 2*(exp(-lambda/2) + (((2*pi)*lambda)^(1/2))*(pnorm(lambda^(1/2)) - .5))
val <- num/den
return(val)
}
psi_vals_true <- abs(values)
psi_vals_1 <- prox_arg(values, sapply(values, function (x) prox_func(x,mu = 1)), mu = 1)
psi_vals_0.5 <- prox_arg(values, sapply(values, function (x) prox_func(x,mu = 0.5)), mu = 0.5)
psi_vals_0.25 <- prox_arg(values, sapply(values, function (x) prox_func(x,mu = 0.25)), mu = 0.25)
true_dens_vals <- exp(-abs(values))/2   #######  corresponding to lambda = 0
approx_dens_1 <- approx_dens_func(values, lambda = 1)
approx_dens_0.5 <- approx_dens_func(values, lambda = 0.5)
approx_dens_0.25 <- approx_dens_func(values, lambda = 0.25)
pdf(file = "MY_env_lap.pdf", height = 6, width = 12)
par(mfrow = c(1,2))
plot(values, psi_vals_true, type = 'l', xlab = "x", ylab = "envelope",
main = expression(paste(psi^lambda)))
lines(values, psi_vals_0.25, type = 'l', col = "red")
lines(values, psi_vals_0.5, type = 'l', col = "blue")
lines(values, psi_vals_1, type = 'l', col = "magenta")
legend("bottomright", c("0", "0.25", "0.5", "1"), lty = 1,
col = c("black", "red", "blue", "magenta"), cex = 0.6, bty = "n")
plot(values, true_dens_vals, type = 'l', xlab = "x", ylab = "Density",
main = expression(paste(pi^lambda)))
lines(values, approx_dens_0.25, type = 'l', col = "red")
lines(values, approx_dens_0.5, type = 'l', col = "blue")
lines(values, approx_dens_1, type = 'l', col = "magenta")
legend("topright", c("0", "0.25", "0.5", "1"), lty = 1,
col = c("black", "red", "blue", "magenta"), cex = 0.6, bty = "n")
dev.off()
